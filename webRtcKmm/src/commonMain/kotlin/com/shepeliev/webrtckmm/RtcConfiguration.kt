package com.shepeliev.webrtckmm

import kotlin.jvm.JvmOverloads

data class RtcConfiguration @JvmOverloads constructor(
    var iceServers: List<IceServer> = emptyList(),
    var iceTransportsType: IceTransportsType = IceTransportsType.All,
    var bundlePolicy: BundlePolicy = BundlePolicy.Balanced,
    var certificate: RtcCertificatePem? = null,
    var rtcpMuxPolicy: RtcpMuxPolicy = RtcpMuxPolicy.Require,
    var tcpCandidatePolicy: TcpCandidatePolicy = TcpCandidatePolicy.Enabled,
    var candidateNetworkPolicy: CandidateNetworkPolicy = CandidateNetworkPolicy.All,
    var audioJitterBufferMaxPackets: Int = 50,
    var audioJitterBufferFastAccelerate: Boolean = false,
    var iceConnectionReceivingTimeout: Int = -1,
    var iceBackupCandidatePairPingInterval: Int = -1,
    var keyType: KeyType = KeyType.ECDSA,
    var continualGatheringPolicy: ContinualGatheringPolicy = ContinualGatheringPolicy.GatherOnce,
    var iceCandidatePoolSize: Int = 0,
    var turnPortPrunePolicy: PortPrunePolicy = PortPrunePolicy.NoPrune,
    var presumeWritableWhenFullyRelayed: Boolean = false,
    var surfaceIceCandidatesOnIceTransportTypeChanged: Boolean = false,
    var iceCheckIntervalStrongConnectivityMs: Int? = null,
    var iceCheckIntervalWeakConnectivityMs: Int? = null,
    var iceCheckMinInterval: Int? = null,
    var iceUnwritableTimeMs: Int? = null,
    var iceUnwritableMinChecks: Int? = null,
    var stunCandidateKeepaliveIntervalMs: Int? = null,
    var disableIPv6OnWifi: Boolean = false,
    var maxIPv6Networks: Int = 5,
    var disableIpv6: Boolean = false,
    var enableDscp: Boolean = false,
    var enableCpuOveruseDetection: Boolean = true,
    var enableRtpDataChannel: Boolean = false,
    var suspendBelowMinBitrate: Boolean = false,
    var screencastMinBitrate: Int? = null,
    var combinedAudioVideoBwe: Boolean? = null,
    var enableDtlsSrtp: Boolean? = null,
    var networkPreference: AdapterType = AdapterType.Unknown,
    var sdpSemantics: SdpSemantics = SdpSemantics.PlanB,
    var activeResetSrtpParams: Boolean = false,
    var allowCodecSwitching: Boolean? = null,
    var cryptoOptions: CryptoOptions? = null,
    var turnLoggingId: String? = null,
)
